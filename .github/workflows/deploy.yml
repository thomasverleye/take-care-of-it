name: Deploy

on:
  push:
    branches: main
    paths: [app/**, package.json]
  pull_request:
    paths: [app/**, package.json]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IS_PRODUCTION: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'true' || 'false' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment:
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
      url: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.deploy.outputs.deployment-url || steps.get_release_url.outputs.release_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env ${{ env.IS_PRODUCTION == 'true' && 'production' || 'preview' }}
      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        if: ${{ env.IS_PRODUCTION == 'true' }}
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_CACHE_API_TOKEN }}
      - name: Set Release URL
        id: get_release_url
        env:
          CMD_OUTPUT: ${{ steps.deploy.outputs.command-output }}
        run: |
          URL=$(echo "$CMD_OUTPUT" | grep -o 'https://[^[:space:]]*\.workers\.dev')
          echo "release_url=$URL" >> $GITHUB_OUTPUT
